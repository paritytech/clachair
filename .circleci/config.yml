# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/ruby:2.5.3-node-browsers

      # documented at https://circleci.com/docs/2.0/circleci-images/
      - image: circleci/postgres:10-alpine-ram
        environment:
          - POSTGRES_USER=clachair
          - POSTGRES_PASSWORD=clachair
          - POSTGRES_DB=clachair_test

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-


      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      - save_cache:
          paths:
            - ./vendor/bundle
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      - run:
          name: install codeclimate
          command: |
            curl --silent -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:migrate

      # run tests!
      - run:
          name: run tests
          environment:
            CC_TEST_REPORTER_ID: bec1103495a56d607073c58e2d46c269dabf0aaf855305928893a5ac73443b4c
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            ./cc-test-reporter before-build
            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            $TEST_FILES
            ./cc-test-reporter after-build --coverage-input-type simplecov --exit-code $?

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

  deploy:
    docker:
      - image: buildpack-deps:bionic-scm
    environment:
      HEROKU_APP: clachair
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "e0:5c:e4:90:34:64:a8:54:84:02:40:b8:97:d6:12:0a"
      - run:
          command: bash .circleci/setup-heroku.sh
      - run:
          command: heroku git:remote --app $HEROKU_APP
      - run:
          command: heroku pg:backups capture --app $HEROKU_APP
      - run:
          command: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git $CIRCLE_SHA1:refs/heads/master
      - run:
          command: heroku run rake db:migrate --app $HEROKU_APP

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master